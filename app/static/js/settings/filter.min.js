(() => {
  // i18n helper
  function T(key, fallback){
    const path = String(key||'').split('.');
    let obj = (window.I18N_WEB || {});
    for (const p of path){ if (obj && typeof obj === 'object' && p in obj) obj = obj[p]; else return fallback; }
    return (typeof obj === 'string') ? obj : fallback;
  }

  // Detecta categoria de cada bloco sem depender do título traduzido
  function detectCat(block){
    if (block.querySelector('#dlRange') || block.querySelector('#dmPath')) return 'baixar';
    if (block.querySelector('#upRange') || block.querySelector('#upRangeRetry')) return 'enviar';
    if (block.querySelector('#cvQuality')) return 'capa';
    if (block.querySelector('#searchRange') || block.querySelector('#sortList')) return 'pesquisa';
    if (block.querySelector('#apiURL') || block.querySelector('#apiAuth')) return 'api';
    return 'outros';
  }

  const blocks = [...document.querySelectorAll(".col.mb-4.pb-2.border-bottom")];
  blocks.forEach(b => {
    b.dataset.cat = b.dataset.cat || detectCat(b);
    b.classList.add("cfg-block");
  });

  // Mapeia botões por índice (ordem fixa no HTML)
  const BTN_MAP = ['todos','baixar','enviar','capa','pesquisa','api','outros'];
  const btns = [...document.querySelectorAll("#filters .btn")];
  btns.forEach((btn, idx) => { btn.dataset.filter = btn.dataset.filter || (BTN_MAP[idx] || 'todos'); });

  let current = 'todos';
  function applyFilter(sel){
    if (sel === current) return;
    current = sel;

    // atualiza estado visual dos botões
    btns.forEach(b => {
      const active = (b.dataset.filter === sel);
      b.classList.toggle('btn-primary', active);
      b.classList.toggle('btn-secondary', !active);
    });

    // mostra/oculta com animação suave
    blocks.forEach(bl => {
      const show = (sel === 'todos') || (bl.dataset.cat === sel);

      if (show) {
        if (!bl.classList.contains("d-none")) return;
        bl.classList.remove("d-none");
        const h = bl.scrollHeight;
        const done = () => { bl.classList.remove("is-animating"); bl.style.height = ""; bl.style.opacity = ""; };
        bl.style.height = "0px"; bl.style.opacity = "0";
        requestAnimationFrame(() => {
          bl.classList.add("is-animating");
          bl.style.height = h + "px"; bl.style.opacity = "1";
          bl.addEventListener("transitionend", done, { once:true });
        });
      } else {
        if (bl.classList.contains("d-none")) return;
        const h = bl.offsetHeight;
        const done = () => { bl.classList.remove("is-animating"); bl.classList.add("d-none"); bl.style.height = ""; bl.style.opacity = ""; };
        bl.style.height = h + "px"; bl.style.opacity = "1";
        requestAnimationFrame(() => {
          bl.classList.add("is-animating");
          bl.style.height = "0px"; bl.style.opacity = "0";
          bl.addEventListener("transitionend", done, { once:true });
        });
      }
    });

    // rola até o primeiro visível
    setTimeout(() => {
      blocks.find(b => !b.classList.contains("d-none"))?.scrollIntoView({ behavior:"smooth", block:"start" });
    }, 80);
  }

  btns.forEach(b => b.addEventListener('click', () => applyFilter(b.dataset.filter || 'todos')));

  // estado inicial (botão "Todos")
  btns.forEach(b => {
    const isAll = (b.dataset.filter === 'todos');
    b.classList.toggle('btn-primary', isAll);
    b.classList.toggle('btn-secondary', !isAll);
  });
})();
